根据byteman对行的遍历可以确定哪些输入（AT WRITE 和INVOKE add等）和输出（AT READ个INVOKE get等）在一行中。
{key ： line，{read ： {a1,a2,a3...}，write :{b1,b2,b3...} }}

问题：如何确定在一条语句中的而相关的用例在测试用例中的位置。
已知：1、能定位到数据变量改变的位置。
     2、能读取有关变量的一些基础信息（数据结构等）
     3、只对java中的内置的基本数据结构和hadoop中的内置数据结构进行处理，不考虑自己设定的数据结构。

处理：1、首先在程序的开始将list的行和列分别设为测试用例中的行和列的个数。
     2、通过read和write来监控变量的改变和发生改变的原因（即因为哪些变量而改变）。

问题：如何在运行时如何监控函数式的输入和输出：例如List.add(...),List.get(...)
已知：1、在一个语句中的调用的对象名称以及被调用的函数的名称。
     2、可以通过函数调用定位到函数调用发生时的语句，但无法与函数调用时的名称进行匹配。
     3、可以将javaparser的分析内容输入到文件中，与byteman运算时进行数据交换。

处理：1、在javaparsr阶段读取函数调用的keyword，参数，函数，以及顺序以及是否在循环内（循环内用1.1、1.1.1等表示所在循环的位置）。
     2、在byteman阶段，根据函数（如果能读取到数据结构就加上数据结构）定位，并且根据执行的循序和在循环内的情况来确定list，还有根据add函数是否有变化来确定循环是否结束。




目标：找到当KeyWord进行赋值或集合添加时相关的值在测试用例中的位置。
已知：1、能定位到数据变量改变的位置。
     2、能读取有关变量的一些基础信息（数据结构等）
     3、只对java中的内置的基本数据结构和hadoop中的内置数据结构进行处理，不考虑自己设定的数据结构。

处理：1、首先在程序的开始将list的行和列分别设为测试用例中的行和列的个数。
     2、通过read和write来监控变量的改变和发生改变的原因（即因为哪些变量而改变）。
     3、确定后通过读取赋值中的行和列的传递和get中对行和列的选择确定相关的变量。

目标：通过read和write来监控变量的改变和发生改变的原因（即因为哪些变量而改变）。
细化：1、



现在已知：一、关于函数调用时的信息：1、最初的关键词；
                            2、调用的函数名称及其参数
                            3、函数调用所在的行数，顺序、所在的循环
         二、关于关键字的信息：1、关键字名称
                            2、关键字所在的函数
                            3、关键字所关联的测试用例中的行和列
                            4、关键字的数据结构
         三、byteman的一些操作：1、在确定的行的序号中插入语句（与javaParser中的行的序号相符），是在语句执行前插入（AT）
                              2、在调用函数时进行插入语句，可用数据结构缩小范围。（AT、After）
                              3、在变量赋值和读取时进行插入语句，（AT、After）
                              4、在程序的开始和最后进行插入语句

方式：1、在reduce函数的参数处将list的行和列进行全赋值。
     2、在遇到赋值语句左右都存在KeyWord的相关变量时，根据右边变量的list相关值（list的get函数的获取或者是整体赋值或者是数组的获取）赋予左边的KeyWord变量。
     3、在遇到KeyWord变量实体调用add函数进行改变时，处理方式与上条类似。
     4、对于循环中，在foreach循环里提取循环条件进行跟踪，在for循环里，追踪循环变量进行跟踪，在while循环里，根据改变量进行追踪。

1、确定改变的关键字和引起改变的关键字。
2、根据语句的类型以及引起改变的关键字的statement类型进行处理。
3、根据语句的类型，对改变的关键字的值进行更新。
